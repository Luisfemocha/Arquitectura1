Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/28/20 17:14:54
<ChavarriaLopezMoreno-Arquitectura2020II         (practica.a  Page 1 - 1


				TITLE ChavarriaLopezMoreno-Arquitectura2020II         (practica.asm)

				; Realizado por: Luis Felipe Moreno Chamorro - Diego Andrés Chavarría Riaño - Jose Fernando Lopez Ramírez
				; Asignatura: Arquitectura del computador
				; Semestre: 2020-2s

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data

 00000000 48 6F 6C 61 0D		MSN_SALUDO byte "Hola", 0dh,0ah,
	   0A 45 73 74 65
	   20 70 72 6F 79
	   65 63 74 6F 20
	   68 61 20 73 69
	   64 6F 20 72 65
	   61 6C 69 7A 61
	   64 6F 20 70 6F
	   72 3A 20 4C 75
	   69 73 20 46 65
	   6C 69 70 65 20
	   4D 6F 72 65 6E
	   6F 20 43 68 61
	   6D 6F 72 72 6F
	   20 2D 20 44 69
	   65 67 6F 20 41
	   6E 64 72 65 73
	   20 43 68 61 76
	   61 72 72 69 61
	   20 52 69 61 6E
	   6F 20 2D 20 4A
	   6F 73 65 20 46
	   65 72 6E 61 6E
	   64 6F 20 4C 6F
	   70 65 7A 20 52
	   61 6D 69 72 65
	   7A 0D 0A 41 73
	   69 67 6E 61 74
	   75 72 61 3A 20
	   41 72 71 75 69
	   74 65 63 74 75
	   72 61 20 64 65
	   6C 20 63 6F 6D
	   70 75 74 61 64
	   6F 72 0D 0A 53
	   65 6D 65 73 74
	   72 65 3A 20 32
	   30 32 30 2D 32
	   73 0D 0A 45 6C
	   20 6F 62 6A 65
	   74 69 76 6F 20
	   64 65 20 65 73
	   74 65 20 70 72
	   6F 67 72 61 6D
	   61 20 65 73 20
	   63 6C 61 73 69
	   66 69 63 61 72
	   20 6C 61 73 20
	   63 69 72 63 75
	   6E 66 65 72 65
	   6E 63 69 61 73
	   20 61 20 70 61
	   72 74 69 72 20
	   64 65 20 75 6E
	   6F 73 20 64 61
	   74 6F 73 20 28
	   63 6F 6F 72 64
	   65 6E 61 64 61
	   73 29 20 73 6F
	   6C 69 63 69 74
	   61 64 61 73 20
	   61 6C 20 75 73
	   75 61 72 69 6F
	   2C 20 71 75 65
	   20 65 6E 20 63
	   61 73 6F 20 64
	   65 20 63 6F 72
	   72 65 73 70 6F
	   6E 64 65 72 20
	   61 20 64 65 74
	   65 72 6D 69 6E
	   61 64 61 20 63
	   6C 61 73 69 66
	   69 63 61 63 69
	   6F 6E 20 73 65
	   20 64 61 72 61
	   6E 20 76 61 6C
	   6F 72 65 73 20
	   65 65 74 72 61
	   20 70 61 72 61
	   20 65 73 74 61
	   0D 0A 0D 0A 0D
	   0A 00
					"Este proyecto ha sido realizado por: Luis Felipe Moreno Chamorro - Diego Andres Chavarria Riano - Jose Fernando Lopez Ramirez", 0dh,0ah,
						"Asignatura: Arquitectura del computador", 0dh,0ah,
						"Semestre: 2020-2s",0dh,0ah,
						"El objetivo de este programa es clasificar las circunferencias a partir de unos datos (coordenadas) solicitadas al usuario, que en caso de corresponder a determinada clasificacion se daran valores eetra para esta",0dh,0ah,
						0dh,0ah, 0dh,0ah,0

 0000019C 69 6E 67 72 65		MSN1 byte "ingrese Valor XI", 0dh, 0ah, 0
	   73 65 20 56 61
	   6C 6F 72 20 58
	   49 0D 0A 00
 000001AF 69 6E 67 72 65		MSN2 byte "ingrese Valor YI", 0dh, 0ah, 0
	   73 65 20 56 61
	   6C 6F 72 20 59
	   49 0D 0A 00
 000001C2 69 6E 67 72 65		MSN3 byte "ingrese Valor RI", 0dh, 0ah, 0
	   73 65 20 56 61
	   6C 6F 72 20 52
	   49 0D 0A 00
 000001D5 69 6E 67 72 65		MSN4 byte "ingrese Valor XF", 0dh, 0ah, 0
	   73 65 20 56 61
	   6C 6F 72 20 58
	   46 0D 0A 00
 000001E8 69 6E 67 72 65		MSN5 byte "ingrese Valor YF", 0dh, 0ah, 0
	   73 65 20 56 61
	   6C 6F 72 20 59
	   46 0D 0A 00
 000001FB 69 6E 67 72 65		MSN6 byte "ingrese Valor RF", 0dh, 0ah, 0
	   73 65 20 56 61
	   6C 6F 72 20 52
	   46 0D 0A 00

 0000020E 43 6F 6F 72 64		MSN_COORDENADAS_SEC1 byte "Coordenadas de puntos de interseccion 1", 0dh, 0ah, 0
	   65 6E 61 64 61
	   73 20 64 65 20
	   70 75 6E 74 6F
	   73 20 64 65 20
	   69 6E 74 65 72
	   73 65 63 63 69
	   6F 6E 20 31 0D
	   0A 00
 00000238 43 6F 6F 72 64		MSN_COORDENADAS_SEC2 byte "Coordenadas de puntos de interseccion 2", 0dh, 0ah, 0
	   65 6E 61 64 61
	   73 20 64 65 20
	   70 75 6E 74 6F
	   73 20 64 65 20
	   69 6E 74 65 72
	   73 65 63 63 69
	   6F 6E 20 32 0D
	   0A 00
 00000262 43 6F 6F 72 64		MSN_COORDENADAS_TAN byte "Coordenada de puntos tangentes", 0dh, 0ah, 0
	   65 6E 61 64 61
	   20 64 65 20 70
	   75 6E 74 6F 73
	   20 74 61 6E 67
	   65 6E 74 65 73
	   0D 0A 00
 00000283 58 20 3D 20 00		PRINT_X byte "X = ", 0
 00000288 59 20 3D 20 00		PRINT_Y byte "Y = ", 0

 0000028D 4C 61 73 20 63		CASE1 byte "Las circunferencias son exteriores", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 65
	   78 74 65 72 69
	   6F 72 65 73 0D
	   0A 00
 000002B2 4C 61 73 20 63		CASE2 byte "Las circunferencias son secantes y se intersectan en:", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 73
	   65 63 61 6E 74
	   65 73 20 79 20
	   73 65 20 69 6E
	   74 65 72 73 65
	   63 74 61 6E 20
	   65 6E 3A 0D 0A
	   00
 000002EA 4C 61 73 20 63		CASE3 byte "Las circunferencias son interiores concentricas", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 69
	   6E 74 65 72 69
	   6F 72 65 73 20
	   63 6F 6E 63 65
	   6E 74 72 69 63
	   61 73 0D 0A 00
 0000031C 4C 61 73 20 63		CASE4 byte "Las circunferencias son coincidentes", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 63
	   6F 69 6E 63 69
	   64 65 6E 74 65
	   73 0D 0A 00
 00000343 4C 61 73 20 63		CASE5 byte "Las circunferencias son tangentes exteriormente", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 74
	   61 6E 67 65 6E
	   74 65 73 20 65
	   78 74 65 72 69
	   6F 72 6D 65 6E
	   74 65 0D 0A 00
 00000375 4C 61 73 20 63		CASE6 byte "Las circunferencias son tangentes interiormente", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 74
	   61 6E 67 65 6E
	   74 65 73 20 69
	   6E 74 65 72 69
	   6F 72 6D 65 6E
	   74 65 0D 0A 00
 000003A7 4C 61 73 20 63		CASE7 byte "Las circunferencias son interiores excentricas", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 69
	   6E 74 65 72 69
	   6F 72 65 73 20
	   65 78 63 65 6E
	   74 72 69 63 61
	   73 0D 0A 00
					
 000003D8 0D 0A 00			SPACE byte 0dh, 0ah, 0

 000003DB 00000000			XI real4 0.0			; x circulo1 
 000003DF 00000000			YI real4 0.0			; y circulo1 
 000003E3 00000000			RI real4 0.0			; r circulo1 
 000003E7 00000000			XF real4 0.0			; x circulo2 
 000003EB 00000000			YF real4 0.0			; y circulo2 
 000003EF 00000000			RF real4 0.0			; r circulo1 
					
 000003F3 00000000			XP1 real4 ?				; X interseccion 1
 000003F7 00000000			YP1 real4 ?				; Y interseccion 1
 000003FB 00000000			XP2 real4 ?				; X interseccion 2
 000003FF 00000000			YP2 real4 ?				; Y interseccion 2

 00000403 00000000			DISTANCIA real4 ?		
					
 00000407 00000000			RSUM real4 ?			; suma de radios
 0000040B 00000000			RSUB real4 ?			; resta de radios

 0000040F 00000000			A real4 ?				;
 00000413 00000000			H real4 ?				;

 00000417 00000000			AUX1 real4 ?
 0000041B 00000000			AUX2 real4 ?
 0000041F 00000000			AUX3 real4 ?
 00000423 00000000			XPaux real4 ?
 00000427 00000000			YPaux real4 ?
					

 00000000			.code
 00000000			main PROC

 00000000  BA 00000000 R		mov edx, offset MSN_SALUDO
 00000005  E8 00000000 E		call writestring

					; LECTURA DE VARIABLES INICIALES

 0000000A  BA 0000019C R		mov edx, offset MSN1	; mueve a edx la variable MSN1
 0000000F  E8 00000000 E		call writestring		; imprime MSN1

 00000014  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 00000019  D9 1D 000003DB R		fstp XI					; mover eax a la variale XI

 0000001F  BA 000001AF R		mov edx, offset MSN2	; mueve a edx la variable MSN2
 00000024  E8 00000000 E		call writestring		; imprime MSN2

 00000029  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 0000002E  D9 1D 000003DF R		fstp YI					; mover eax a la variale YI

 00000034  BA 000001C2 R		mov edx, offset MSN3	; mueve a edx la variable MSN3
 00000039  E8 00000000 E		call writestring		; imprime MSN3

 0000003E  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 00000043  D9 1D 000003E3 R		fstp RI					; mover eax a la variale RI

					; LECTURA DE VARIABLES FINALES
					
 00000049  BA 000001D5 R		mov edx, offset MSN4	; mueve a edx la variable MSN1
 0000004E  E8 00000000 E		call writestring		; imprime MSN4

 00000053  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 00000058  D9 1D 000003E7 R		fstp XF					; mover eax a la variale XF
					
 0000005E  BA 000001E8 R		mov edx, offset MSN5	; mueve a edx la variable MSN5
 00000063  E8 00000000 E		call writestring		; imprime MSN5

 00000068  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 0000006D  D9 1D 000003EB R		fstp YF					; mover eax a la variale YF

 00000073  BA 000001FB R		mov edx, offset MSN6	; mueve a edx la variable MSN6
 00000078  E8 00000000 E		call writestring		; imprime MSN6

 0000007D  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 00000082  D9 1D 000003EF R		fstp RF					; mover eax a la variale RF

						
					; CALCULAR DISTANCIA
					
 00000088  9B DB E3			finit
 0000008B  D9 05 000003E7 R		fld XF					; se ingresa XF
 00000091  D9 05 000003DB R		fld XI					; se ingresa XI
 00000097  DE E9			fSub					; resta XF-XI
 00000099  D9 1D 00000403 R		fstp DISTANCIA			; DISTANCIA = XF-XI
						
 0000009F  D9 05 00000403 R		fld DISTANCIA
 000000A5  D9 05 00000403 R		fld DISTANCIA
 000000AB  DE C9			fmul
 000000AD  D9 1D 00000417 R		fstp AUX1				; AUX1 = (XF-XI)^2
						
 000000B3  D9 05 000003EB R		fld YF					; se ingresa YF
 000000B9  D9 05 000003DF R		fld YI					; se ingresa YI
 000000BF  DE E9			fSub					; resta YF-YI
 000000C1  D9 1D 00000403 R		fstp DISTANCIA			; DISTANCIA = YF-YI

 000000C7  D9 05 00000403 R		fld DISTANCIA
 000000CD  D9 05 00000403 R		fld DISTANCIA
 000000D3  DE C9			fmul
 000000D5  D9 1D 0000041B R		fstp AUX2				; AUX2 = (YF-YI)^2
						
 000000DB  D9 05 00000417 R		fld AUX1
 000000E1  D9 05 0000041B R		fld AUX2
 000000E7  DE C1			fadd					; (XF-XI)^2 + (YF-YI)^2
 000000E9  D9 FA			fsqrt
 000000EB  D9 1D 00000403 R		fstp DISTANCIA			; DISTANCIA = sqrt( (XF-XI)^2 + (YF-YI)^2 )
					
 000000F1  9B DB E3			finit	
 000000F4  D9 05 00000403 R		fld DISTANCIA		
					;call writefloat			; Print DISTANCIA

 000000FA  BA 000003D8 R		mov edx, offset SPACE
					;call writestring		; Print \n

					; CALCULO DE SUMA Y RESTA DE RADIOS
					; SUMA

 000000FF  9B DB E3			finit					; inicia operacion punto flotante
 00000102  D9 05 000003E3 R		fld RI					; ingresa RI que es radio de la primera circunferencia
 00000108  D9 05 000003EF R		fld RF					; ingresa RF que es radio de la segunda circunferencia
 0000010E  DE C1			fadd					; RI + RF
 00000110  D9 1D 00000407 R		fstp RSUM				; RSUM = RI + RF

 00000116  9B DB E3			finit
 00000119  D9 05 00000407 R		fld RSUM
					;call writefloat			; Print RSUM

 0000011F  BA 000003D8 R		mov edx, offset SPACE
					;call writestring		; Print \n

					; RESTA

 00000124  9B DB E3			finit					; inicia operacion punto flotante
 00000127  D9 05 000003E3 R		fld RI					; ingresa RI que es radio de la primera circunferencia
 0000012D  D9 05 000003EF R		fld RF					; ingresa RF que es radio de la segunda circunferencia
 00000133  DE E9			fsub					; RI - RF
 00000135  D9 E1			fabs					; abs(RI - RF)
 00000137  D9 1D 0000040B R		fstp RSUB				; RSUB = abs(RI - RF)

 0000013D  9B DB E3			finit
 00000140  D9 05 0000040B R		fld RSUB
					;call writefloat			; Print RSUB

 00000146  BA 000003D8 R		mov edx, offset SPACE
					;call writestring		; Print \n

					; CALCULO DE A= ( RI^2 - RF^2 + D^2 ) / 2D
					
 0000014B  9B DB E3			finit
 0000014E  D9 05 000003E3 R		fld RI
 00000154  D9 05 000003E3 R		fld RI
 0000015A  DE C9			fmul
 0000015C  D9 1D 00000417 R		fstp AUX1				; AUX1 = RI^2

 00000162  9B DB E3			finit
 00000165  D9 05 000003EF R		fld RF
 0000016B  D9 05 000003EF R		fld RF
 00000171  DE C9			fmul
 00000173  D9 1D 0000041B R		fstp AUX2				; AUX2 = RF^2

 00000179  9B DB E3			finit
 0000017C  D9 05 00000403 R		fld DISTANCIA
 00000182  D9 05 00000403 R		fld DISTANCIA
 00000188  DE C9			fmul
 0000018A  D9 1D 0000041F R		fstp AUX3				; AUX3 = DISTANCIA^2

 00000190  9B DB E3			finit
 00000193  D9 05 00000417 R		fld AUX1
 00000199  D9 05 0000041B R		fld AUX2
 0000019F  DE E9			fsub					;st(0) = AUX1 - AUX2
 000001A1  D9 05 0000041F R		fld AUX3
 000001A7  DE C1			fadd
 000001A9  D9 1D 00000417 R		fstp AUX1				; AUX1 = ( RI^2 - RF^2 + D^2)

 000001AF  9B DB E3			finit 
 000001B2  D9 E8			fld1 
 000001B4  D9 E8			fld1
 000001B6  DE C1			fadd
 000001B8  D9 05 00000403 R		fld DISTANCIA
 000001BE  DE C9			fmul
 000001C0  D9 1D 0000041B R		fstp AUX2				; AUX2= 2 * DISTANCIA

 000001C6  9B DB E3			finit
 000001C9  D9 05 00000417 R		fld AUX1
 000001CF  D9 05 0000041B R		fld AUX2
 000001D5  DE F9			fdiv
 000001D7  D9 1D 0000040F R		fstp A					; A= ( RI^2 - RF^2 + D^2 ) / 2D

					; CALCULO DE H= sqrt(r*r - a*a)

 000001DD  9B DB E3			finit
 000001E0  D9 05 000003E3 R		fld RI
 000001E6  D9 05 000003E3 R		fld RI
 000001EC  DE C9			fmul
 000001EE  D9 1D 00000417 R		fstp AUX1				; AUX1 = RI^2

 000001F4  9B DB E3			finit
 000001F7  D9 05 0000040F R		fld A
 000001FD  D9 05 0000040F R		fld A
 00000203  DE C9			fmul
 00000205  D9 1D 0000041B R		fstp AUX2				; AUX2 = A^2

 0000020B  9B DB E3			finit
 0000020E  D9 05 00000417 R		fld AUX1
 00000214  D9 05 0000041B R		fld AUX2
 0000021A  DE E9			fsub
 0000021C  D9 E1			fabs
 0000021E  D9 FA			fsqrt
 00000220  D9 1D 00000413 R		fstp H					; H = sqrt( RI^2 - A^2 )

					; INICIO DE CONDICIONALES

 00000226  83 3D 00000403 R		cmp DISTANCIA, 0		
	   00
 0000022D  0F 84 00000289		jz fin3					; if (DISTANCIA == 0) vaya a fin3 --> Tienen el mismo centro

 00000233  A1 0000040B R		mov eax, RSUB
 00000238  39 05 00000403 R		cmp DISTANCIA, eax
 0000023E  0F 8C 0000042A		jl fin7					; if (DISTANCIA < RSUB) vaya a fin7 INTERIORES EXENTRICOS
 00000244  0F 84 0000036C		jz fin6					; if (DISTANCIA == RSUB) vaya a fin6 TANGENCIA INTERIOR

 0000024A  A1 00000407 R		mov eax, RSUM
 0000024F  39 05 00000403 R		cmp DISTANCIA, eax		
 00000255  7F 0D			jg fin1					; if (DISTANCIA > RSUM) vaya a fin1 NO SE CORTAN
 00000257  7C 24			jl fin2					; if (DISTANCIA < RSUM) vaya a fin2 SECANTE
 00000259  0F 84 0000029C		jz fin5					; if (DISTANCIA == RSUM) vaya a fin5 TANGENCIA EXTERIOR
 0000025F  E9 0000041E			jmp fin_code


					; CASE1 = son exteriores // NO SE INTERSECTAN
 00000264				fin1:
 00000264  BA 0000028D R			mov edx, offset CASE1
 00000269  E8 00000000 E			call writestring		; Print CASE1
						
 0000026E  BA 000003D8 R			mov edx, offset SPACE
 00000273  E8 00000000 E			call writestring		; Print \n
 00000278  E9 00000405				jmp fin_code


					; CASE2 = son secantes
 0000027D				fin2:
 0000027D  BA 000002B2 R			mov edx, offset CASE2
 00000282  E8 00000000 E			call writestring		; Print CASE2

 00000287  BA 000003D8 R			mov edx, offset SPACE
 0000028C  E8 00000000 E			call writestring		; Print \n

						; Paux = (CIRCULO2 - CIRCULO1)
						
 00000291  9B DB E3				finit
 00000294  D9 05 000003E7 R			fld XF
 0000029A  D9 05 000003DB R			fld XI
 000002A0  DE E9				fsub
 000002A2  D9 1D 00000423 R			fstp XPaux				; XPaux = XF - XI

 000002A8  9B DB E3				finit
 000002AB  D9 05 000003EB R			fld YF
 000002B1  D9 05 000003DF R			fld YI
 000002B7  DE E9				fsub
 000002B9  D9 1D 00000427 R			fstp YPaux				; YPaux = YF - YI

						; Paux *= a/d
 000002BF  9B DB E3				finit
 000002C2  D9 05 0000040F R			fld A
 000002C8  D9 05 00000403 R			fld DISTANCIA
 000002CE  DE F9				fdiv
 000002D0  D9 1D 00000417 R			fstp AUX1				; AUX1 = A/D

 000002D6  9B DB E3				finit 
 000002D9  D9 05 00000423 R			fld XPaux
 000002DF  D9 05 00000417 R			fld AUX1
 000002E5  DE C9				fmul
 000002E7  D9 1D 00000423 R			fstp XPaux				; XPaux *= A/D

 000002ED  9B DB E3				finit 
 000002F0  D9 05 00000427 R			fld YPaux
 000002F6  D9 05 00000417 R			fld AUX1
 000002FC  DE C9				fmul
 000002FE  D9 1D 00000427 R			fstp YPaux				; YPaux *= A/D

						; Paux += CIRCULO1 

 00000304  9B DB E3				finit
 00000307  D9 05 00000423 R			fld XPaux
 0000030D  D9 05 000003DB R			fld XI
 00000313  DE C1				fadd
 00000315  D9 1D 00000423 R			fstp XPaux				; XPaux += XI

 0000031B  9B DB E3				finit
 0000031E  D9 05 00000427 R			fld YPaux
 00000324  D9 05 000003DF R			fld YI
 0000032A  DE C1				fadd
 0000032C  D9 1D 00000427 R			fstp YPaux				; YPaux += YI
						
						; XP1 = XPaux + H * (YF - YI) / D;
 00000332  9B DB E3				finit
 00000335  D9 05 000003EB R			fld YF
 0000033B  D9 05 000003DF R			fld YI
 00000341  DE E9				fsub
 00000343  D9 05 00000413 R			fld H
 00000349  DE C9				fmul
 0000034B  D9 05 00000403 R			fld DISTANCIA
 00000351  DE F9				fdiv
 00000353  D9 05 00000423 R			fld XPaux
 00000359  DE C1				fadd
 0000035B  D9 1D 000003F3 R			fstp XP1
						
 00000361  BA 0000020E R			mov edx, offset MSN_COORDENADAS_SEC1	; mueve a edx la variable MSN_COORDENADAS_SEC
 00000366  E8 00000000 E			call writestring						; imprime MSN_COORDENADAS_SEC
						
 0000036B  BA 00000283 R			mov edx, offset PRINT_X					; mueve a edx la variable PRINT_X
 00000370  E8 00000000 E			call writestring						; imprime PRINT_X
						
 00000375  9B DB E3				finit
 00000378  D9 05 000003F3 R			fld XP1
 0000037E  E8 00000000 E			call writefloat

 00000383  BA 000003D8 R			mov edx, offset SPACE
 00000388  E8 00000000 E			call writestring						; Print \n

						; YP1 = YPaux - H * (XF - XI) / D;
 0000038D  9B DB E3				finit
 00000390  D9 05 000003E7 R			fld XF
 00000396  D9 05 000003DB R			fld XI
 0000039C  DE E9				fsub
 0000039E  D9 05 00000413 R			fld H
 000003A4  DE C9				fmul
 000003A6  D9 05 00000403 R			fld DISTANCIA
 000003AC  DE F9				fdiv
 000003AE  D9 1D 00000417 R			fstp AUX1								; AUX1= H * (XF - XI) / D

 000003B4  9B DB E3				finit 
 000003B7  D9 05 00000427 R			fld YPaux
 000003BD  D9 05 00000417 R			fld AUX1
 000003C3  DE E9				fsub
 000003C5  D9 1D 000003F7 R			fstp YP1
						
						
 000003CB  BA 00000288 R			mov edx, offset PRINT_Y					; mueve a edx la variable PRINT_Y
 000003D0  E8 00000000 E			call writestring						; imprime PRINT_Y

 000003D5  9B DB E3				finit
 000003D8  D9 05 000003F7 R			fld YP1
 000003DE  E8 00000000 E			call writefloat

 000003E3  BA 000003D8 R			mov edx, offset SPACE
 000003E8  E8 00000000 E			call writestring		; Print \n

 000003ED  BA 000003D8 R			mov edx, offset SPACE
 000003F2  E8 00000000 E			call writestring		; Print \n

						; XP2 = XPaux - H * (YF - YI) / D;
 000003F7  9B DB E3				finit
 000003FA  D9 05 000003EB R			fld YF
 00000400  D9 05 000003DF R			fld YI
 00000406  DE E9				fsub
 00000408  D9 05 00000413 R			fld H
 0000040E  DE C9				fmul
 00000410  D9 05 00000403 R			fld DISTANCIA
 00000416  DE F9				fdiv
 00000418  D9 1D 00000417 R			fstp AUX1

 0000041E  9B DB E3				finit
 00000421  D9 05 00000423 R			fld XPaux
 00000427  D9 05 00000417 R			fld AUX1
 0000042D  DE E9				fsub
 0000042F  D9 1D 000003FB R			fstp XP2
						
 00000435  BA 00000238 R			mov edx, offset MSN_COORDENADAS_SEC2	; mueve a edx la variable MSN_COORDENADAS_SEC
 0000043A  E8 00000000 E			call writestring						; imprime MSN_COORDENADAS_SEC
								
 0000043F  BA 00000283 R			mov edx, offset PRINT_X					; mueve a edx la variable PRINT_X
 00000444  E8 00000000 E			call writestring						; imprime PRINT_X
						
 00000449  9B DB E3				finit
 0000044C  D9 05 000003FB R			fld XP2
 00000452  E8 00000000 E			call writefloat

 00000457  BA 000003D8 R			mov edx, offset SPACE
 0000045C  E8 00000000 E			call writestring		; Print \n

						; YP2 = YPaux + H * (XF - XI) / D;
 00000461  9B DB E3				finit
 00000464  D9 05 000003E7 R			fld XF
 0000046A  D9 05 000003DB R			fld XI
 00000470  DE E9				fsub
 00000472  D9 05 00000413 R			fld H
 00000478  DE C9				fmul
 0000047A  D9 05 00000403 R			fld DISTANCIA
 00000480  DE F9				fdiv
 00000482  D9 05 00000427 R			fld YPaux
 00000488  DE C1				fadd
 0000048A  D9 1D 000003FF R			fstp YP2
						
 00000490  BA 00000288 R			mov edx, offset PRINT_Y					; mueve a edx la variable PRINT_Y
 00000495  E8 00000000 E			call writestring						; imprime PRINT_Y
						
 0000049A  9B DB E3				finit
 0000049D  D9 05 000003FF R			fld YP2
 000004A3  E8 00000000 E			call writefloat

 000004A8  BA 000003D8 R			mov edx, offset SPACE
 000004AD  E8 00000000 E			call writestring		; Print \n
					
 000004B2  E9 000001CB				jmp fin_code

 000004B7  E9 000001C6			jmp fin_code


					; CASE3 = son interiores concentricas
 000004BC				fin3 :
						
 000004BC  A1 000003E3 R			mov eax, RI
 000004C1  39 05 000003EF R			cmp RF, eax
 000004C7  74 19				jz fin4					; if (RI==RF) vaya a fin4 --> Radios iguales 

 000004C9  BA 000002EA R			mov edx, offset CASE3
 000004CE  E8 00000000 E			call writestring		; Print CASE3
						
 000004D3  BA 000003D8 R			mov edx, offset SPACE
 000004D8  E8 00000000 E			call writestring		; Print \n
 000004DD  E9 000001A0				jmp fin_code


					; CASE4 = son coincidentes
 000004E2				fin4:

 000004E2  BA 0000031C R			mov edx, offset CASE4
 000004E7  E8 00000000 E			call writestring		; Print CASE4
						
 000004EC  BA 000003D8 R			mov edx, offset SPACE
 000004F1  E8 00000000 E			call writestring		; Print \n
 000004F6  E9 00000187				jmp fin_code


					; CASE5 byte "Las circunferencias son tangentes exteriormente", 0dh, 0ah, 0
 000004FB				fin5:
						;XP1 = XI+a*(XF-XI)/d
 000004FB  9B DB E3				finit
 000004FE  D9 05 000003E7 R			fld XF
 00000504  D9 05 000003DB R			fld XI
 0000050A  DE E9				fsub
 0000050C  D9 05 0000040F R			fld A
 00000512  DE C9				fmul
 00000514  D9 05 00000403 R			fld DISTANCIA
 0000051A  DE F9				fdiv
 0000051C  D9 05 000003DB R			fld XI
 00000522  DE C1				fadd
 00000524  D9 1D 000003F3 R			fstp XP1

						;YP1 = YI+a*(YF-YI)/d
 0000052A  9B DB E3				finit
 0000052D  D9 05 000003EB R			fld YF
 00000533  D9 05 000003DF R			fld YI
 00000539  DE E9				fsub
 0000053B  D9 05 0000040F R			fld A
 00000541  DE C9				fmul
 00000543  D9 05 00000403 R			fld DISTANCIA
 00000549  DE F9				fdiv
 0000054B  D9 05 000003DF R			fld YI
 00000551  DE C1				fadd
 00000553  D9 1D 000003F7 R			fstp YP1

 00000559  BA 00000343 R			mov edx, offset CASE5
 0000055E  E8 00000000 E			call writestring						; Print CASE5
						
 00000563  BA 00000262 R			mov edx, offset MSN_COORDENADAS_TAN		; mueve a edx la variable tangencial
 00000568  E8 00000000 E			call writestring						; imprime

 0000056D  BA 00000283 R			mov edx, offset PRINT_X					; mueve a edx la variable PRINT_X
 00000572  E8 00000000 E			call writestring						; imprime PRINT_X
						
 00000577  9B DB E3				finit
 0000057A  D9 05 000003F3 R			fld XP1
 00000580  E8 00000000 E			call writefloat

 00000585  BA 000003D8 R			mov edx, offset SPACE
 0000058A  E8 00000000 E			call writestring						; Print \n
						
 0000058F  BA 00000288 R			mov edx, offset PRINT_Y					; mueve a edx la variable PRINT_Y
 00000594  E8 00000000 E			call writestring						; imprime PRINT_Y
						
 00000599  9B DB E3				finit
 0000059C  D9 05 000003F7 R			fld YP1
 000005A2  E8 00000000 E			call writefloat

 000005A7  BA 000003D8 R			mov edx, offset SPACE
 000005AC  E8 00000000 E			call writestring						; Print \n

 000005B1  E9 000000CC				jmp fin_code


					; CASE6 byte "Las circunferencias son tangentes interiormente", 0dh, 0ah, 0
 000005B6				fin6:
						;XP1 = XI+a*(XF-XI)/d
 000005B6  9B DB E3				finit
 000005B9  D9 05 000003E7 R			fld XF
 000005BF  D9 05 000003DB R			fld XI
 000005C5  DE E9				fsub
 000005C7  D9 05 0000040F R			fld A
 000005CD  DE C9				fmul
 000005CF  D9 05 00000403 R			fld DISTANCIA
 000005D5  DE F9				fdiv
 000005D7  D9 05 000003DB R			fld XI
 000005DD  DE C1				fadd
 000005DF  D9 1D 000003F3 R			fstp XP1

						;YP1 = YI+a*(YF-YI)/d
 000005E5  9B DB E3				finit
 000005E8  D9 05 000003EB R			fld YF
 000005EE  D9 05 000003DF R			fld YI
 000005F4  DE E9				fsub
 000005F6  D9 05 0000040F R			fld A
 000005FC  DE C9				fmul
 000005FE  D9 05 00000403 R			fld DISTANCIA
 00000604  DE F9				fdiv
 00000606  D9 05 000003DF R			fld YI
 0000060C  DE C1				fadd
 0000060E  D9 1D 000003F7 R			fstp YP1

 00000614  BA 00000375 R			mov edx, offset CASE6
 00000619  E8 00000000 E			call writestring						; Print CASE6
						
 0000061E  BA 00000262 R			mov edx, offset MSN_COORDENADAS_TAN		; mueve a edx la variable tangencial
 00000623  E8 00000000 E			call writestring						; imprime 
						
 00000628  BA 00000283 R			mov edx, offset PRINT_X					; mueve a edx la variable PRINT_X
 0000062D  E8 00000000 E			call writestring						; imprime PRINT_X
						
 00000632  9B DB E3				finit
 00000635  D9 05 000003F3 R			fld XP1
 0000063B  E8 00000000 E			call writefloat

 00000640  BA 000003D8 R			mov edx, offset SPACE
 00000645  E8 00000000 E			call writestring						; Print \n
						
 0000064A  BA 00000288 R			mov edx, offset PRINT_Y					; mueve a edx la variable PRINT_Y
 0000064F  E8 00000000 E			call writestring						; imprime PRINT_Y
						
 00000654  9B DB E3				finit
 00000657  D9 05 000003F7 R			fld YP1
 0000065D  E8 00000000 E			call writefloat

 00000662  BA 000003D8 R			mov edx, offset SPACE
 00000667  E8 00000000 E			call writestring						; Print \n

 0000066C  EB 14				jmp fin_code

					; CASE7 = INTERIORES EXCENTRICOS
 0000066E				fin7:
 0000066E  BA 000003A7 R			mov edx, offset CASE7
 00000673  E8 00000000 E			call writestring		; Print CASE7
						
 00000678  BA 000003D8 R			mov edx, offset SPACE
 0000067D  E8 00000000 E			call writestring		; Print \n
 00000682				fin_code:

					exit
 00000682  6A 00	   *	    push   +000000000h
 00000684  E8 00000000 E   *	    call   ExitProcess
 00000689			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/28/20 17:14:54
<ChavarriaLopezMoreno-Arquitectura2020II         (practica.a  Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000042B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000689 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000689 Public STDCALL
  fin1 . . . . . . . . . . . . .	L Near	 00000264 _TEXT	
  fin2 . . . . . . . . . . . . .	L Near	 0000027D _TEXT	
  fin3 . . . . . . . . . . . . .	L Near	 000004BC _TEXT	
  fin4 . . . . . . . . . . . . .	L Near	 000004E2 _TEXT	
  fin5 . . . . . . . . . . . . .	L Near	 000004FB _TEXT	
  fin6 . . . . . . . . . . . . .	L Near	 000005B6 _TEXT	
  fin7 . . . . . . . . . . . . .	L Near	 0000066E _TEXT	
  fin_code . . . . . . . . . . .	L Near	 00000682 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
AUX1 . . . . . . . . . . . . . .	DWord	 00000417 _DATA	
AUX2 . . . . . . . . . . . . . .	DWord	 0000041B _DATA	
AUX3 . . . . . . . . . . . . . .	DWord	 0000041F _DATA	
A  . . . . . . . . . . . . . . .	DWord	 0000040F _DATA	
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CASE1  . . . . . . . . . . . . .	Byte	 0000028D _DATA	
CASE2  . . . . . . . . . . . . .	Byte	 000002B2 _DATA	
CASE3  . . . . . . . . . . . . .	Byte	 000002EA _DATA	
CASE4  . . . . . . . . . . . . .	Byte	 0000031C _DATA	
CASE5  . . . . . . . . . . . . .	Byte	 00000343 _DATA	
CASE6  . . . . . . . . . . . . .	Byte	 00000375 _DATA	
CASE7  . . . . . . . . . . . . .	Byte	 000003A7 _DATA	
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DISTANCIA  . . . . . . . . . . .	DWord	 00000403 _DATA	
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
H  . . . . . . . . . . . . . . .	DWord	 00000413 _DATA	
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MSN1 . . . . . . . . . . . . . .	Byte	 0000019C _DATA	
MSN2 . . . . . . . . . . . . . .	Byte	 000001AF _DATA	
MSN3 . . . . . . . . . . . . . .	Byte	 000001C2 _DATA	
MSN4 . . . . . . . . . . . . . .	Byte	 000001D5 _DATA	
MSN5 . . . . . . . . . . . . . .	Byte	 000001E8 _DATA	
MSN6 . . . . . . . . . . . . . .	Byte	 000001FB _DATA	
MSN_COORDENADAS_SEC1 . . . . . .	Byte	 0000020E _DATA	
MSN_COORDENADAS_SEC2 . . . . . .	Byte	 00000238 _DATA	
MSN_COORDENADAS_TAN  . . . . . .	Byte	 00000262 _DATA	
MSN_SALUDO . . . . . . . . . . .	Byte	 00000000 _DATA	
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PRINT_X  . . . . . . . . . . . .	Byte	 00000283 _DATA	
PRINT_Y  . . . . . . . . . . . .	Byte	 00000288 _DATA	
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RF . . . . . . . . . . . . . . .	DWord	 000003EF _DATA	
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
RI . . . . . . . . . . . . . . .	DWord	 000003E3 _DATA	
RSUB . . . . . . . . . . . . . .	DWord	 0000040B _DATA	
RSUM . . . . . . . . . . . . . .	DWord	 00000407 _DATA	
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
SPACE  . . . . . . . . . . . . .	Byte	 000003D8 _DATA	
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
XF . . . . . . . . . . . . . . .	DWord	 000003E7 _DATA	
XI . . . . . . . . . . . . . . .	DWord	 000003DB _DATA	
XP1  . . . . . . . . . . . . . .	DWord	 000003F3 _DATA	
XP2  . . . . . . . . . . . . . .	DWord	 000003FB _DATA	
XPaux  . . . . . . . . . . . . .	DWord	 00000423 _DATA	
YF . . . . . . . . . . . . . . .	DWord	 000003EB _DATA	
YI . . . . . . . . . . . . . . .	DWord	 000003DF _DATA	
YP1  . . . . . . . . . . . . . .	DWord	 000003F7 _DATA	
YP2  . . . . . . . . . . . . . .	DWord	 000003FF _DATA	
YPaux  . . . . . . . . . . . . .	DWord	 00000427 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
