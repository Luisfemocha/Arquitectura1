Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/28/20 20:20:40
<ChavarriaLopezMoreno-Arquitectura2020II         (practica.a  Page 1 - 1


				TITLE ChavarriaLopezMoreno-Arquitectura2020II         (practica.asm)

				; Realizado por: Luis Felipe Moreno Chamorro - Diego Andrés Chavarría Riaño - Jose Fernando Lopez Ramírez
				; Asignatura: Arquitectura del computador
				; Semestre: 2020-2s

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 46 69 6E 20 63		MSN_DESPEDIDA byte "Fin compilacion, tenga un buen dia.", 0dh,0ah, 0dh,0ah,0
	   6F 6D 70 69 6C
	   61 63 69 6F 6E
	   2C 20 74 65 6E
	   67 61 20 75 6E
	   20 62 75 65 6E
	   20 64 69 61 2E
	   0D 0A 0D 0A 00
 00000028 53 61 6C 75 64		MSN_SALUDO byte "Saludos.", 0dh,0ah,
	   6F 73 2E 0D 0A
	   45 73 74 65 20
	   70 72 6F 79 65
	   63 74 6F 20 68
	   61 20 73 69 64
	   6F 20 72 65 61
	   6C 69 7A 61 64
	   6F 20 70 6F 72
	   3A 20 4C 75 69
	   73 20 46 65 6C
	   69 70 65 20 4D
	   6F 72 65 6E 6F
	   20 43 68 61 6D
	   6F 72 72 6F 20
	   2D 20 44 69 65
	   67 6F 20 41 6E
	   64 72 65 73 20
	   43 68 61 76 61
	   72 72 69 61 20
	   52 69 61 6E 6F
	   20 2D 20 4A 6F
	   73 65 20 46 65
	   72 6E 61 6E 64
	   6F 20 4C 6F 70
	   65 7A 20 52 61
	   6D 69 72 65 7A
	   2E 0D 0A 41 73
	   69 67 6E 61 74
	   75 72 61 3A 20
	   41 72 71 75 69
	   74 65 63 74 75
	   72 61 20 64 65
	   6C 20 63 6F 6D
	   70 75 74 61 64
	   6F 72 2E 0D 0A
	   53 65 6D 65 73
	   74 72 65 3A 20
	   32 30 32 30 2D
	   32 73 2E 0D 0A
	   00
					"Este proyecto ha sido realizado por: Luis Felipe Moreno Chamorro - Diego Andres Chavarria Riano - Jose Fernando Lopez Ramirez.", 0dh,0ah,
					"Asignatura: Arquitectura del computador.", 0dh,0ah,
					"Semestre: 2020-2s.",0dh,0ah,0
 000000F1 45 6C 20 6F 62		MSN_OBJETIVO byte "El objetivo de este programa es clasificar las circunferencias a partir de unos datos (coordenadas) solicitadas al usuario, que en caso de corresponder a determinada clasificacion se daran valores extra para esta.",0dh,0ah,
	   6A 65 74 69 76
	   6F 20 64 65 20
	   65 73 74 65 20
	   70 72 6F 67 72
	   61 6D 61 20 65
	   73 20 63 6C 61
	   73 69 66 69 63
	   61 72 20 6C 61
	   73 20 63 69 72
	   63 75 6E 66 65
	   72 65 6E 63 69
	   61 73 20 61 20
	   70 61 72 74 69
	   72 20 64 65 20
	   75 6E 6F 73 20
	   64 61 74 6F 73
	   20 28 63 6F 6F
	   72 64 65 6E 61
	   64 61 73 29 20
	   73 6F 6C 69 63
	   69 74 61 64 61
	   73 20 61 6C 20
	   75 73 75 61 72
	   69 6F 2C 20 71
	   75 65 20 65 6E
	   20 63 61 73 6F
	   20 64 65 20 63
	   6F 72 72 65 73
	   70 6F 6E 64 65
	   72 20 61 20 64
	   65 74 65 72 6D
	   69 6E 61 64 61
	   20 63 6C 61 73
	   69 66 69 63 61
	   63 69 6F 6E 20
	   73 65 20 64 61
	   72 61 6E 20 76
	   61 6C 6F 72 65
	   73 20 65 78 74
	   72 61 20 70 61
	   72 61 20 65 73
	   74 61 2E 0D 0A
	   0D 0A 00
					0dh,0ah,0

 000001CB 49 6E 67 72 65		MSN1 byte "Ingrese por favor:", 0dh, 0ah,
	   73 65 20 70 6F
	   72 20 66 61 76
	   6F 72 3A 0D 0A
	   43 6F 6F 72 64
	   65 6E 61 64 61
	   20 58 20 64 65
	   6C 20 63 65 6E
	   74 72 6F 20 64
	   65 6C 20 63 69
	   72 63 75 6C 6F
	   20 31 3A 20 00
					"Coordenada X del centro del circulo 1: ", 0
 00000207 43 6F 6F 72 64		MSN2 byte "Coordenada Y del centro del circulo 1: ", 0
	   65 6E 61 64 61
	   20 59 20 64 65
	   6C 20 63 65 6E
	   74 72 6F 20 64
	   65 6C 20 63 69
	   72 63 75 6C 6F
	   20 31 3A 20 00
 0000022F 52 61 64 69 6F		MSN3 byte "Radio del circulo 1: ", 0
	   20 64 65 6C 20
	   63 69 72 63 75
	   6C 6F 20 31 3A
	   20 00
 00000245 43 6F 6F 72 64		MSN4 byte "Coordenada X del centro del circulo 2: ", 0
	   65 6E 61 64 61
	   20 58 20 64 65
	   6C 20 63 65 6E
	   74 72 6F 20 64
	   65 6C 20 63 69
	   72 63 75 6C 6F
	   20 32 3A 20 00
 0000026D 43 6F 6F 72 64		MSN5 byte "Coordenada Y del centro del circulo 2: ", 0
	   65 6E 61 64 61
	   20 59 20 64 65
	   6C 20 63 65 6E
	   74 72 6F 20 64
	   65 6C 20 63 69
	   72 63 75 6C 6F
	   20 32 3A 20 00
 00000295 52 61 64 69 6F		MSN6 byte "Radio del circulo 2: ", 0
	   20 64 65 6C 20
	   63 69 72 63 75
	   6C 6F 20 32 3A
	   20 00

 000002AB 43 6F 6F 72 64		MSN_COORDENADAS_SEC1 byte "Coordenadas de puntos de interseccion 1", 0dh, 0ah, 0
	   65 6E 61 64 61
	   73 20 64 65 20
	   70 75 6E 74 6F
	   73 20 64 65 20
	   69 6E 74 65 72
	   73 65 63 63 69
	   6F 6E 20 31 0D
	   0A 00
 000002D5 43 6F 6F 72 64		MSN_COORDENADAS_SEC2 byte "Coordenadas de puntos de interseccion 2", 0dh, 0ah, 0
	   65 6E 61 64 61
	   73 20 64 65 20
	   70 75 6E 74 6F
	   73 20 64 65 20
	   69 6E 74 65 72
	   73 65 63 63 69
	   6F 6E 20 32 0D
	   0A 00
 000002FF 43 6F 6F 72 64		MSN_COORDENADAS_TAN byte "Coordenada de puntos tangentes", 0dh, 0ah, 0
	   65 6E 61 64 61
	   20 64 65 20 70
	   75 6E 74 6F 73
	   20 74 61 6E 67
	   65 6E 74 65 73
	   0D 0A 00
 00000320 58 20 3D 20 00		PRINT_X byte "X = ", 0
 00000325 59 20 3D 20 00		PRINT_Y byte "Y = ", 0

 0000032A 4C 61 73 20 63		CASE1 byte "Las circunferencias son exteriores", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 65
	   78 74 65 72 69
	   6F 72 65 73 0D
	   0A 00
 0000034F 4C 61 73 20 63		CASE2 byte "Las circunferencias son secantes y se intersectan en:", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 73
	   65 63 61 6E 74
	   65 73 20 79 20
	   73 65 20 69 6E
	   74 65 72 73 65
	   63 74 61 6E 20
	   65 6E 3A 0D 0A
	   00
 00000387 4C 61 73 20 63		CASE3 byte "Las circunferencias son interiores concentricas", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 69
	   6E 74 65 72 69
	   6F 72 65 73 20
	   63 6F 6E 63 65
	   6E 74 72 69 63
	   61 73 0D 0A 00
 000003B9 4C 61 73 20 63		CASE4 byte "Las circunferencias son coincidentes", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 63
	   6F 69 6E 63 69
	   64 65 6E 74 65
	   73 0D 0A 00
 000003E0 4C 61 73 20 63		CASE5 byte "Las circunferencias son tangentes exteriormente", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 74
	   61 6E 67 65 6E
	   74 65 73 20 65
	   78 74 65 72 69
	   6F 72 6D 65 6E
	   74 65 0D 0A 00
 00000412 4C 61 73 20 63		CASE6 byte "Las circunferencias son tangentes interiormente", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 74
	   61 6E 67 65 6E
	   74 65 73 20 69
	   6E 74 65 72 69
	   6F 72 6D 65 6E
	   74 65 0D 0A 00
 00000444 4C 61 73 20 63		CASE7 byte "Las circunferencias son interiores excentricas", 0dh, 0ah, 0
	   69 72 63 75 6E
	   66 65 72 65 6E
	   63 69 61 73 20
	   73 6F 6E 20 69
	   6E 74 65 72 69
	   6F 72 65 73 20
	   65 78 63 65 6E
	   74 72 69 63 61
	   73 0D 0A 00

 00000475 45 72 72 6F 72		CASEERROR byte "Error. No puede ingresar radios negativos.", 0dh, 0ah, 0
	   2E 20 4E 6F 20
	   70 75 65 64 65
	   20 69 6E 67 72
	   65 73 61 72 20
	   72 61 64 69 6F
	   73 20 6E 65 67
	   61 74 69 76 6F
	   73 2E 0D 0A 00
					
 000004A2 0D 0A 00			SPACE byte 0dh, 0ah, 0

 000004A5 00000000			XI real4 0.0			; x circulo1 
 000004A9 00000000			YI real4 0.0			; y circulo1 
 000004AD 00000000			RI real4 0.0			; r circulo1 
 000004B1 00000000			XF real4 0.0			; x circulo2 
 000004B5 00000000			YF real4 0.0			; y circulo2 
 000004B9 00000000			RF real4 0.0			; r circulo1 
					
 000004BD 00000000			XP1 real4 ?				; X interseccion 1
 000004C1 00000000			YP1 real4 ?				; Y interseccion 1
 000004C5 00000000			XP2 real4 ?				; X interseccion 2
 000004C9 00000000			YP2 real4 ?				; Y interseccion 2

 000004CD 00000000			DISTANCIA real4 ?		
					
 000004D1 00000000			RSUM real4 ?			; suma de radios
 000004D5 00000000			RSUB real4 ?			; resta de radios

 000004D9 00000000			A real4 ?
 000004DD 00000000			H real4 ?

 000004E1 00000000			AUX1 real4 ?
 000004E5 00000000			AUX2 real4 ?
 000004E9 00000000			AUX3 real4 ?
 000004ED 00000000			XPaux real4 ?
 000004F1 00000000			YPaux real4 ?
					
 00000000			.code
 00000000			main PROC
 00000000  BA 00000028 R		mov edx, offset MSN_SALUDO
 00000005  E8 00000000 E		call writestring
 0000000A  BA 000000F1 R		mov edx, offset MSN_OBJETIVO
 0000000F  E8 00000000 E		call writestring

					; LECTURA DE VARIABLES INICIALES

 00000014  BA 000001CB R		mov edx, offset MSN1	; mueve a edx la variable MSN1
 00000019  E8 00000000 E		call writestring		; imprime MSN1

 0000001E  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 00000023  D9 1D 000004A5 R		fstp XI					; mover eax a la variale XI

 00000029  BA 00000207 R		mov edx, offset MSN2	; mueve a edx la variable MSN2
 0000002E  E8 00000000 E		call writestring		; imprime MSN2

 00000033  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 00000038  D9 1D 000004A9 R		fstp YI					; mover eax a la variale YI

 0000003E  BA 0000022F R		mov edx, offset MSN3	; mueve a edx la variable MSN3
 00000043  E8 00000000 E		call writestring		; imprime MSN3

 00000048  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 0000004D  D9 1D 000004AD R		fstp RI					; mover eax a la variale RI

					; LECTURA DE VARIABLES FINALES
					
 00000053  BA 00000245 R		mov edx, offset MSN4	; mueve a edx la variable MSN1
 00000058  E8 00000000 E		call writestring		; imprime MSN4

 0000005D  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 00000062  D9 1D 000004B1 R		fstp XF					; mover eax a la variale XF
					
 00000068  BA 0000026D R		mov edx, offset MSN5	; mueve a edx la variable MSN5
 0000006D  E8 00000000 E		call writestring		; imprime MSN5

 00000072  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 00000077  D9 1D 000004B5 R		fstp YF					; mover eax a la variale YF

 0000007D  BA 00000295 R		mov edx, offset MSN6	; mueve a edx la variable MSN6
 00000082  E8 00000000 E		call writestring		; imprime MSN6

 00000087  E8 00000000 E		call Readfloat			; leer desde el teclado y guardarlo en el reg ST(0)
 0000008C  D9 1D 000004B9 R		fstp RF					; mover eax a la variale RF
					
					; COMPROBACION RADIOS NO NEGATIVOS.
 00000092  83 3D 000004AD R		cmp RI, 0
	   00
 00000099  0F 8C 00000613		jl fin8
 0000009F  83 3D 000004B9 R		cmp RF, 0
	   00
 000000A6  0F 8C 00000606		jl fin8

					; CALCULAR DISTANCIA
					
 000000AC  9B DB E3			finit
 000000AF  D9 05 000004B1 R		fld XF					; se ingresa XF
 000000B5  D9 05 000004A5 R		fld XI					; se ingresa XI
 000000BB  DE E9			fSub					; resta XF-XI
 000000BD  D9 1D 000004CD R		fstp DISTANCIA			; DISTANCIA = XF-XI
						
 000000C3  D9 05 000004CD R		fld DISTANCIA
 000000C9  D9 05 000004CD R		fld DISTANCIA
 000000CF  DE C9			fmul
 000000D1  D9 1D 000004E1 R		fstp AUX1				; AUX1 = (XF-XI)^2
						
 000000D7  D9 05 000004B5 R		fld YF					; se ingresa YF
 000000DD  D9 05 000004A9 R		fld YI					; se ingresa YI
 000000E3  DE E9			fSub					; resta YF-YI
 000000E5  D9 1D 000004CD R		fstp DISTANCIA			; DISTANCIA = YF-YI

 000000EB  D9 05 000004CD R		fld DISTANCIA
 000000F1  D9 05 000004CD R		fld DISTANCIA
 000000F7  DE C9			fmul
 000000F9  D9 1D 000004E5 R		fstp AUX2				; AUX2 = (YF-YI)^2
						
 000000FF  D9 05 000004E1 R		fld AUX1
 00000105  D9 05 000004E5 R		fld AUX2
 0000010B  DE C1			fadd					; (XF-XI)^2 + (YF-YI)^2
 0000010D  D9 FA			fsqrt
 0000010F  D9 1D 000004CD R		fstp DISTANCIA			; DISTANCIA = sqrt( (XF-XI)^2 + (YF-YI)^2 )
					
 00000115  9B DB E3			finit	
 00000118  D9 05 000004CD R		fld DISTANCIA		
					;call writefloat			; Print DISTANCIA

 0000011E  BA 000004A2 R		mov edx, offset SPACE
					;call writestring		; Print \n

					; CALCULO DE SUMA Y RESTA DE RADIOS
					; SUMA

 00000123  9B DB E3			finit					; inicia operacion punto flotante
 00000126  D9 05 000004AD R		fld RI					; ingresa RI que es radio de la primera circunferencia
 0000012C  D9 05 000004B9 R		fld RF					; ingresa RF que es radio de la segunda circunferencia
 00000132  DE C1			fadd					; RI + RF
 00000134  D9 1D 000004D1 R		fstp RSUM				; RSUM = RI + RF

 0000013A  9B DB E3			finit
 0000013D  D9 05 000004D1 R		fld RSUM
					;call writefloat			; Print RSUM

 00000143  BA 000004A2 R		mov edx, offset SPACE
					;call writestring		; Print \n

					; RESTA

 00000148  9B DB E3			finit					; inicia operacion punto flotante
 0000014B  D9 05 000004AD R		fld RI					; ingresa RI que es radio de la primera circunferencia
 00000151  D9 05 000004B9 R		fld RF					; ingresa RF que es radio de la segunda circunferencia
 00000157  DE E9			fsub					; RI - RF
 00000159  D9 E1			fabs					; abs(RI - RF)
 0000015B  D9 1D 000004D5 R		fstp RSUB				; RSUB = abs(RI - RF)

 00000161  9B DB E3			finit
 00000164  D9 05 000004D5 R		fld RSUB
					;call writefloat			; Print RSUB

 0000016A  BA 000004A2 R		mov edx, offset SPACE
					;call writestring		; Print \n

					; CALCULO DE A= ( RI^2 - RF^2 + D^2 ) / 2D
					
 0000016F  9B DB E3			finit
 00000172  D9 05 000004AD R		fld RI
 00000178  D9 05 000004AD R		fld RI
 0000017E  DE C9			fmul
 00000180  D9 1D 000004E1 R		fstp AUX1				; AUX1 = RI^2

 00000186  9B DB E3			finit
 00000189  D9 05 000004B9 R		fld RF
 0000018F  D9 05 000004B9 R		fld RF
 00000195  DE C9			fmul
 00000197  D9 1D 000004E5 R		fstp AUX2				; AUX2 = RF^2

 0000019D  9B DB E3			finit
 000001A0  D9 05 000004CD R		fld DISTANCIA
 000001A6  D9 05 000004CD R		fld DISTANCIA
 000001AC  DE C9			fmul
 000001AE  D9 1D 000004E9 R		fstp AUX3				; AUX3 = DISTANCIA^2

 000001B4  9B DB E3			finit
 000001B7  D9 05 000004E1 R		fld AUX1
 000001BD  D9 05 000004E5 R		fld AUX2
 000001C3  DE E9			fsub					;st(0) = AUX1 - AUX2
 000001C5  D9 05 000004E9 R		fld AUX3
 000001CB  DE C1			fadd
 000001CD  D9 1D 000004E1 R		fstp AUX1				; AUX1 = ( RI^2 - RF^2 + D^2)

 000001D3  9B DB E3			finit 
 000001D6  D9 E8			fld1 
 000001D8  D9 E8			fld1
 000001DA  DE C1			fadd
 000001DC  D9 05 000004CD R		fld DISTANCIA
 000001E2  DE C9			fmul
 000001E4  D9 1D 000004E5 R		fstp AUX2				; AUX2= 2 * DISTANCIA

 000001EA  9B DB E3			finit
 000001ED  D9 05 000004E1 R		fld AUX1
 000001F3  D9 05 000004E5 R		fld AUX2
 000001F9  DE F9			fdiv
 000001FB  D9 1D 000004D9 R		fstp A					; A= ( RI^2 - RF^2 + D^2 ) / 2D

					; CALCULO DE H= sqrt(r*r - a*a)
 00000201  9B DB E3			finit
 00000204  D9 05 000004AD R		fld RI
 0000020A  D9 05 000004AD R		fld RI
 00000210  DE C9			fmul
 00000212  D9 1D 000004E1 R		fstp AUX1				; AUX1 = RI^2

 00000218  9B DB E3			finit
 0000021B  D9 05 000004D9 R		fld A
 00000221  D9 05 000004D9 R		fld A
 00000227  DE C9			fmul
 00000229  D9 1D 000004E5 R		fstp AUX2				; AUX2 = A^2

 0000022F  9B DB E3			finit
 00000232  D9 05 000004E1 R		fld AUX1
 00000238  D9 05 000004E5 R		fld AUX2
 0000023E  DE E9			fsub
 00000240  D9 E1			fabs
 00000242  D9 FA			fsqrt
 00000244  D9 1D 000004DD R		fstp H					; H = sqrt( RI^2 - A^2 )

					; INICIO DE CONDICIONALES
 0000024A  83 3D 000004CD R		cmp DISTANCIA, 0		
	   00
 00000251  0F 84 00000293		jz fin3					; if (DISTANCIA == 0) vaya a fin3 --> Tienen el mismo centro

 00000257  A1 000004D5 R		mov eax, RSUB
 0000025C  39 05 000004CD R		cmp DISTANCIA, eax
 00000262  0F 8C 00000434		jl fin7					; if (DISTANCIA < RSUB) vaya a fin7 INTERIORES EXENTRICOS
 00000268  0F 84 00000376		jz fin6					; if (DISTANCIA == RSUB) vaya a fin6 TANGENCIA INTERIOR

 0000026E  A1 000004D1 R		mov eax, RSUM
 00000273  39 05 000004CD R		cmp DISTANCIA, eax		
 00000279  7F 0D			jg fin1					; if (DISTANCIA > RSUM) vaya a fin1 NO SE CORTAN
 0000027B  7C 24			jl fin2					; if (DISTANCIA < RSUM) vaya a fin2 SECANTE
 0000027D  0F 84 000002A6		jz fin5					; if (DISTANCIA == RSUM) vaya a fin5 TANGENCIA EXTERIOR
 00000283  E9 0000043E			jmp fin_code

 00000288				fin1:   ; CASE1 = son exteriores // NO SE INTERSECTAN
 00000288  BA 0000032A R			mov edx, offset CASE1
 0000028D  E8 00000000 E			call writestring		; Print CASE1
						
 00000292  BA 000004A2 R			mov edx, offset SPACE
 00000297  E8 00000000 E			call writestring		; Print \n
 0000029C  E9 00000425				jmp fin_code

 000002A1				fin2:   ; CASE2 = son secantes
 000002A1  BA 0000034F R			mov edx, offset CASE2
 000002A6  E8 00000000 E			call writestring		; Print CASE2

 000002AB  BA 000004A2 R			mov edx, offset SPACE
 000002B0  E8 00000000 E			call writestring		; Print \n

						; Paux = (CIRCULO2 - CIRCULO1)
 000002B5  9B DB E3				finit
 000002B8  D9 05 000004B1 R			fld XF
 000002BE  D9 05 000004A5 R			fld XI
 000002C4  DE E9				fsub
 000002C6  D9 1D 000004ED R			fstp XPaux				; XPaux = XF - XI

 000002CC  9B DB E3				finit
 000002CF  D9 05 000004B5 R			fld YF
 000002D5  D9 05 000004A9 R			fld YI
 000002DB  DE E9				fsub
 000002DD  D9 1D 000004F1 R			fstp YPaux				; YPaux = YF - YI

						; Paux *= a/d
 000002E3  9B DB E3				finit
 000002E6  D9 05 000004D9 R			fld A
 000002EC  D9 05 000004CD R			fld DISTANCIA
 000002F2  DE F9				fdiv
 000002F4  D9 1D 000004E1 R			fstp AUX1				; AUX1 = A/D

 000002FA  9B DB E3				finit 
 000002FD  D9 05 000004ED R			fld XPaux
 00000303  D9 05 000004E1 R			fld AUX1
 00000309  DE C9				fmul
 0000030B  D9 1D 000004ED R			fstp XPaux				; XPaux *= A/D

 00000311  9B DB E3				finit 
 00000314  D9 05 000004F1 R			fld YPaux
 0000031A  D9 05 000004E1 R			fld AUX1
 00000320  DE C9				fmul
 00000322  D9 1D 000004F1 R			fstp YPaux				; YPaux *= A/D

						; Paux += CIRCULO1 
 00000328  9B DB E3				finit
 0000032B  D9 05 000004ED R			fld XPaux
 00000331  D9 05 000004A5 R			fld XI
 00000337  DE C1				fadd
 00000339  D9 1D 000004ED R			fstp XPaux				; XPaux += XI

 0000033F  9B DB E3				finit
 00000342  D9 05 000004F1 R			fld YPaux
 00000348  D9 05 000004A9 R			fld YI
 0000034E  DE C1				fadd
 00000350  D9 1D 000004F1 R			fstp YPaux				; YPaux += YI
						
						; XP1 = XPaux + H * (YF - YI) / D;
 00000356  9B DB E3				finit
 00000359  D9 05 000004B5 R			fld YF
 0000035F  D9 05 000004A9 R			fld YI
 00000365  DE E9				fsub
 00000367  D9 05 000004DD R			fld H
 0000036D  DE C9				fmul
 0000036F  D9 05 000004CD R			fld DISTANCIA
 00000375  DE F9				fdiv
 00000377  D9 05 000004ED R			fld XPaux
 0000037D  DE C1				fadd
 0000037F  D9 1D 000004BD R			fstp XP1
						
 00000385  BA 000002AB R			mov edx, offset MSN_COORDENADAS_SEC1	; mueve a edx la variable MSN_COORDENADAS_SEC
 0000038A  E8 00000000 E			call writestring						; imprime MSN_COORDENADAS_SEC
						
 0000038F  BA 00000320 R			mov edx, offset PRINT_X					; mueve a edx la variable PRINT_X
 00000394  E8 00000000 E			call writestring						; imprime PRINT_X
						
 00000399  9B DB E3				finit
 0000039C  D9 05 000004BD R			fld XP1
 000003A2  E8 00000000 E			call writefloat

 000003A7  BA 000004A2 R			mov edx, offset SPACE
 000003AC  E8 00000000 E			call writestring						; Print \n

						; YP1 = YPaux - H * (XF - XI) / D;
 000003B1  9B DB E3				finit
 000003B4  D9 05 000004B1 R			fld XF
 000003BA  D9 05 000004A5 R			fld XI
 000003C0  DE E9				fsub
 000003C2  D9 05 000004DD R			fld H
 000003C8  DE C9				fmul
 000003CA  D9 05 000004CD R			fld DISTANCIA
 000003D0  DE F9				fdiv
 000003D2  D9 1D 000004E1 R			fstp AUX1								; AUX1= H * (XF - XI) / D

 000003D8  9B DB E3				finit 
 000003DB  D9 05 000004F1 R			fld YPaux
 000003E1  D9 05 000004E1 R			fld AUX1
 000003E7  DE E9				fsub
 000003E9  D9 1D 000004C1 R			fstp YP1
						
 000003EF  BA 00000325 R			mov edx, offset PRINT_Y					; mueve a edx la variable PRINT_Y
 000003F4  E8 00000000 E			call writestring						; imprime PRINT_Y

 000003F9  9B DB E3				finit
 000003FC  D9 05 000004C1 R			fld YP1
 00000402  E8 00000000 E			call writefloat

 00000407  BA 000004A2 R			mov edx, offset SPACE
 0000040C  E8 00000000 E			call writestring		; Print \n

 00000411  BA 000004A2 R			mov edx, offset SPACE
 00000416  E8 00000000 E			call writestring		; Print \n

						; XP2 = XPaux - H * (YF - YI) / D;
 0000041B  9B DB E3				finit
 0000041E  D9 05 000004B5 R			fld YF
 00000424  D9 05 000004A9 R			fld YI
 0000042A  DE E9				fsub
 0000042C  D9 05 000004DD R			fld H
 00000432  DE C9				fmul
 00000434  D9 05 000004CD R			fld DISTANCIA
 0000043A  DE F9				fdiv
 0000043C  D9 1D 000004E1 R			fstp AUX1

 00000442  9B DB E3				finit
 00000445  D9 05 000004ED R			fld XPaux
 0000044B  D9 05 000004E1 R			fld AUX1
 00000451  DE E9				fsub
 00000453  D9 1D 000004C5 R			fstp XP2
						
 00000459  BA 000002D5 R			mov edx, offset MSN_COORDENADAS_SEC2	; mueve a edx la variable MSN_COORDENADAS_SEC
 0000045E  E8 00000000 E			call writestring						; imprime MSN_COORDENADAS_SEC
								
 00000463  BA 00000320 R			mov edx, offset PRINT_X					; mueve a edx la variable PRINT_X
 00000468  E8 00000000 E			call writestring						; imprime PRINT_X
						
 0000046D  9B DB E3				finit
 00000470  D9 05 000004C5 R			fld XP2
 00000476  E8 00000000 E			call writefloat

 0000047B  BA 000004A2 R			mov edx, offset SPACE
 00000480  E8 00000000 E			call writestring		; Print \n

						; YP2 = YPaux + H * (XF - XI) / D;
 00000485  9B DB E3				finit
 00000488  D9 05 000004B1 R			fld XF
 0000048E  D9 05 000004A5 R			fld XI
 00000494  DE E9				fsub
 00000496  D9 05 000004DD R			fld H
 0000049C  DE C9				fmul
 0000049E  D9 05 000004CD R			fld DISTANCIA
 000004A4  DE F9				fdiv
 000004A6  D9 05 000004F1 R			fld YPaux
 000004AC  DE C1				fadd
 000004AE  D9 1D 000004C9 R			fstp YP2
						
 000004B4  BA 00000325 R			mov edx, offset PRINT_Y					; mueve a edx la variable PRINT_Y
 000004B9  E8 00000000 E			call writestring						; imprime PRINT_Y
						
 000004BE  9B DB E3				finit
 000004C1  D9 05 000004C9 R			fld YP2
 000004C7  E8 00000000 E			call writefloat

 000004CC  BA 000004A2 R			mov edx, offset SPACE
 000004D1  E8 00000000 E			call writestring		; Print \n

 000004D6  BA 000004A2 R			mov edx, offset SPACE
 000004DB  E8 00000000 E			call writestring		; Print \n
					
 000004E0  E9 000001E1				jmp fin_code

 000004E5  E9 000001DC			jmp fin_code

 000004EA				fin3 :  ; CASE3 = son interiores concentricas
 000004EA  A1 000004AD R			mov eax, RI
 000004EF  39 05 000004B9 R			cmp RF, eax
 000004F5  74 19				jz fin4					; if (RI==RF) vaya a fin4 --> Radios iguales 

 000004F7  BA 00000387 R			mov edx, offset CASE3
 000004FC  E8 00000000 E			call writestring		; Print CASE3
						
 00000501  BA 000004A2 R			mov edx, offset SPACE
 00000506  E8 00000000 E			call writestring		; Print \n
 0000050B  E9 000001B6				jmp fin_code

 00000510				fin4:  ; CASE4 = son coincidentes
 00000510  BA 000003B9 R			mov edx, offset CASE4
 00000515  E8 00000000 E			call writestring		; Print CASE4
						
 0000051A  BA 000004A2 R			mov edx, offset SPACE
 0000051F  E8 00000000 E			call writestring		; Print \n
 00000524  E9 0000019D				jmp fin_code

 00000529				fin5:  ; CASE5 byte "Las circunferencias son tangentes exteriormente", 0dh, 0ah, 0
						;XP1 = XI+a*(XF-XI)/d
 00000529  9B DB E3				finit
 0000052C  D9 05 000004B1 R			fld XF
 00000532  D9 05 000004A5 R			fld XI
 00000538  DE E9				fsub
 0000053A  D9 05 000004D9 R			fld A
 00000540  DE C9				fmul
 00000542  D9 05 000004CD R			fld DISTANCIA
 00000548  DE F9				fdiv
 0000054A  D9 05 000004A5 R			fld XI
 00000550  DE C1				fadd
 00000552  D9 1D 000004BD R			fstp XP1

						;YP1 = YI+a*(YF-YI)/d
 00000558  9B DB E3				finit
 0000055B  D9 05 000004B5 R			fld YF
 00000561  D9 05 000004A9 R			fld YI
 00000567  DE E9				fsub
 00000569  D9 05 000004D9 R			fld A
 0000056F  DE C9				fmul
 00000571  D9 05 000004CD R			fld DISTANCIA
 00000577  DE F9				fdiv
 00000579  D9 05 000004A9 R			fld YI
 0000057F  DE C1				fadd
 00000581  D9 1D 000004C1 R			fstp YP1

 00000587  BA 000003E0 R			mov edx, offset CASE5
 0000058C  E8 00000000 E			call writestring						; Print CASE5
						
 00000591  BA 000002FF R			mov edx, offset MSN_COORDENADAS_TAN		; mueve a edx la variable tangencial
 00000596  E8 00000000 E			call writestring						; imprime

 0000059B  BA 00000320 R			mov edx, offset PRINT_X					; mueve a edx la variable PRINT_X
 000005A0  E8 00000000 E			call writestring						; imprime PRINT_X
						
 000005A5  9B DB E3				finit
 000005A8  D9 05 000004BD R			fld XP1
 000005AE  E8 00000000 E			call writefloat

 000005B3  BA 000004A2 R			mov edx, offset SPACE
 000005B8  E8 00000000 E			call writestring						; Print \n
						
 000005BD  BA 00000325 R			mov edx, offset PRINT_Y					; mueve a edx la variable PRINT_Y
 000005C2  E8 00000000 E			call writestring						; imprime PRINT_Y
						
 000005C7  9B DB E3				finit
 000005CA  D9 05 000004C1 R			fld YP1
 000005D0  E8 00000000 E			call writefloat

 000005D5  BA 000004A2 R			mov edx, offset SPACE
 000005DA  E8 00000000 E			call writestring						; Print \n

 000005DF  E9 000000E2				jmp fin_code

 000005E4				fin6:  ; CASE6 byte "Las circunferencias son tangentes interiormente", 0dh, 0ah, 0
						;XP1 = XI+a*(XF-XI)/d
 000005E4  9B DB E3				finit
 000005E7  D9 05 000004B1 R			fld XF
 000005ED  D9 05 000004A5 R			fld XI
 000005F3  DE E9				fsub
 000005F5  D9 05 000004D9 R			fld A
 000005FB  DE C9				fmul
 000005FD  D9 05 000004CD R			fld DISTANCIA
 00000603  DE F9				fdiv
 00000605  D9 05 000004A5 R			fld XI
 0000060B  DE C1				fadd
 0000060D  D9 1D 000004BD R			fstp XP1

						;YP1 = YI+a*(YF-YI)/d
 00000613  9B DB E3				finit
 00000616  D9 05 000004B5 R			fld YF
 0000061C  D9 05 000004A9 R			fld YI
 00000622  DE E9				fsub
 00000624  D9 05 000004D9 R			fld A
 0000062A  DE C9				fmul
 0000062C  D9 05 000004CD R			fld DISTANCIA
 00000632  DE F9				fdiv
 00000634  D9 05 000004A9 R			fld YI
 0000063A  DE C1				fadd
 0000063C  D9 1D 000004C1 R			fstp YP1

 00000642  BA 00000412 R			mov edx, offset CASE6
 00000647  E8 00000000 E			call writestring						; Print CASE6
						
 0000064C  BA 000002FF R			mov edx, offset MSN_COORDENADAS_TAN		; mueve a edx la variable tangencial
 00000651  E8 00000000 E			call writestring						; imprime 
						
 00000656  BA 00000320 R			mov edx, offset PRINT_X					; mueve a edx la variable PRINT_X
 0000065B  E8 00000000 E			call writestring						; imprime PRINT_X
						
 00000660  9B DB E3				finit
 00000663  D9 05 000004BD R			fld XP1
 00000669  E8 00000000 E			call writefloat

 0000066E  BA 000004A2 R			mov edx, offset SPACE
 00000673  E8 00000000 E			call writestring						; Print \n
						
 00000678  BA 00000325 R			mov edx, offset PRINT_Y					; mueve a edx la variable PRINT_Y
 0000067D  E8 00000000 E			call writestring						; imprime PRINT_Y
						
 00000682  9B DB E3				finit
 00000685  D9 05 000004C1 R			fld YP1
 0000068B  E8 00000000 E			call writefloat

 00000690  BA 000004A2 R			mov edx, offset SPACE
 00000695  E8 00000000 E			call writestring						; Print \n

 0000069A  EB 2A				jmp fin_code

					; CASE7 = INTERIORES EXCENTRICOS
 0000069C				fin7: 
 0000069C  BA 00000444 R			mov edx, offset CASE7
 000006A1  E8 00000000 E			call writestring		; Print CASE7
						
 000006A6  BA 000004A2 R			mov edx, offset SPACE
 000006AB  E8 00000000 E			call writestring		; Print \n

 000006B0  EB 14				jmp fin_code

					; CASEERROR byte "Error. No puede ingresar radios negativos.", 0dh, 0ah, 0
 000006B2				fin8: 
 000006B2  BA 00000475 R			mov edx, offset CASEERROR
 000006B7  E8 00000000 E			call writestring		; Print ERROR
						
 000006BC  BA 000004A2 R			mov edx, offset SPACE
 000006C1  E8 00000000 E			call writestring		; Print \n

 000006C6				fin_code:
 000006C6  BA 00000000 R			mov edx, offset MSN_DESPEDIDA
 000006CB  E8 00000000 E			call writestring

					exit
 000006D0  6A 00	   *	    push   +000000000h
 000006D2  E8 00000000 E   *	    call   ExitProcess
 000006D7			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/28/20 20:20:40
<ChavarriaLopezMoreno-Arquitectura2020II         (practica.a  Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000004F5 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000006D7 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000006D7 Public STDCALL
  fin1 . . . . . . . . . . . . .	L Near	 00000288 _TEXT	
  fin2 . . . . . . . . . . . . .	L Near	 000002A1 _TEXT	
  fin3 . . . . . . . . . . . . .	L Near	 000004EA _TEXT	
  fin4 . . . . . . . . . . . . .	L Near	 00000510 _TEXT	
  fin5 . . . . . . . . . . . . .	L Near	 00000529 _TEXT	
  fin6 . . . . . . . . . . . . .	L Near	 000005E4 _TEXT	
  fin7 . . . . . . . . . . . . .	L Near	 0000069C _TEXT	
  fin8 . . . . . . . . . . . . .	L Near	 000006B2 _TEXT	
  fin_code . . . . . . . . . . .	L Near	 000006C6 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
AUX1 . . . . . . . . . . . . . .	DWord	 000004E1 _DATA	
AUX2 . . . . . . . . . . . . . .	DWord	 000004E5 _DATA	
AUX3 . . . . . . . . . . . . . .	DWord	 000004E9 _DATA	
A  . . . . . . . . . . . . . . .	DWord	 000004D9 _DATA	
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CASE1  . . . . . . . . . . . . .	Byte	 0000032A _DATA	
CASE2  . . . . . . . . . . . . .	Byte	 0000034F _DATA	
CASE3  . . . . . . . . . . . . .	Byte	 00000387 _DATA	
CASE4  . . . . . . . . . . . . .	Byte	 000003B9 _DATA	
CASE5  . . . . . . . . . . . . .	Byte	 000003E0 _DATA	
CASE6  . . . . . . . . . . . . .	Byte	 00000412 _DATA	
CASE7  . . . . . . . . . . . . .	Byte	 00000444 _DATA	
CASEERROR  . . . . . . . . . . .	Byte	 00000475 _DATA	
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DISTANCIA  . . . . . . . . . . .	DWord	 000004CD _DATA	
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
H  . . . . . . . . . . . . . . .	DWord	 000004DD _DATA	
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MSN1 . . . . . . . . . . . . . .	Byte	 000001CB _DATA	
MSN2 . . . . . . . . . . . . . .	Byte	 00000207 _DATA	
MSN3 . . . . . . . . . . . . . .	Byte	 0000022F _DATA	
MSN4 . . . . . . . . . . . . . .	Byte	 00000245 _DATA	
MSN5 . . . . . . . . . . . . . .	Byte	 0000026D _DATA	
MSN6 . . . . . . . . . . . . . .	Byte	 00000295 _DATA	
MSN_COORDENADAS_SEC1 . . . . . .	Byte	 000002AB _DATA	
MSN_COORDENADAS_SEC2 . . . . . .	Byte	 000002D5 _DATA	
MSN_COORDENADAS_TAN  . . . . . .	Byte	 000002FF _DATA	
MSN_DESPEDIDA  . . . . . . . . .	Byte	 00000000 _DATA	
MSN_OBJETIVO . . . . . . . . . .	Byte	 000000F1 _DATA	
MSN_SALUDO . . . . . . . . . . .	Byte	 00000028 _DATA	
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PRINT_X  . . . . . . . . . . . .	Byte	 00000320 _DATA	
PRINT_Y  . . . . . . . . . . . .	Byte	 00000325 _DATA	
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RF . . . . . . . . . . . . . . .	DWord	 000004B9 _DATA	
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
RI . . . . . . . . . . . . . . .	DWord	 000004AD _DATA	
RSUB . . . . . . . . . . . . . .	DWord	 000004D5 _DATA	
RSUM . . . . . . . . . . . . . .	DWord	 000004D1 _DATA	
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
SPACE  . . . . . . . . . . . . .	Byte	 000004A2 _DATA	
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
XF . . . . . . . . . . . . . . .	DWord	 000004B1 _DATA	
XI . . . . . . . . . . . . . . .	DWord	 000004A5 _DATA	
XP1  . . . . . . . . . . . . . .	DWord	 000004BD _DATA	
XP2  . . . . . . . . . . . . . .	DWord	 000004C5 _DATA	
XPaux  . . . . . . . . . . . . .	DWord	 000004ED _DATA	
YF . . . . . . . . . . . . . . .	DWord	 000004B5 _DATA	
YI . . . . . . . . . . . . . . .	DWord	 000004A9 _DATA	
YP1  . . . . . . . . . . . . . .	DWord	 000004C1 _DATA	
YP2  . . . . . . . . . . . . . .	DWord	 000004C9 _DATA	
YPaux  . . . . . . . . . . . . .	DWord	 000004F1 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
